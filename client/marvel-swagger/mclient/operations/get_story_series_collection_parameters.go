// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetStorySeriesCollectionParams creates a new GetStorySeriesCollectionParams object
// with the default values initialized.
func NewGetStorySeriesCollectionParams() *GetStorySeriesCollectionParams {
	var ()
	return &GetStorySeriesCollectionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetStorySeriesCollectionParamsWithTimeout creates a new GetStorySeriesCollectionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetStorySeriesCollectionParamsWithTimeout(timeout time.Duration) *GetStorySeriesCollectionParams {
	var ()
	return &GetStorySeriesCollectionParams{

		timeout: timeout,
	}
}

// NewGetStorySeriesCollectionParamsWithContext creates a new GetStorySeriesCollectionParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetStorySeriesCollectionParamsWithContext(ctx context.Context) *GetStorySeriesCollectionParams {
	var ()
	return &GetStorySeriesCollectionParams{

		Context: ctx,
	}
}

// NewGetStorySeriesCollectionParamsWithHTTPClient creates a new GetStorySeriesCollectionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetStorySeriesCollectionParamsWithHTTPClient(client *http.Client) *GetStorySeriesCollectionParams {
	var ()
	return &GetStorySeriesCollectionParams{
		HTTPClient: client,
	}
}

/*GetStorySeriesCollectionParams contains all the parameters to send to the API endpoint
for the get story series collection operation typically these are written to a http.Request
*/
type GetStorySeriesCollectionParams struct {

	/*Apikey
	  [Auth] public apikey

	*/
	Apikey string
	/*Characters
	  Return only series which feature the specified characters (accepts a comma-separated list of ids).

	*/
	Characters []int32
	/*Comics
	  Return only series which contain the specified comics (accepts a comma-separated list of ids).

	*/
	Comics []int32
	/*Contains
	  Return only series containing one or more comics with the specified format.

	*/
	Contains []string
	/*Creators
	  Return only series which feature work by the specified creators (accepts a comma-separated list of ids).

	*/
	Creators []int32
	/*Events
	  Return only series which have comics that take place during the specified events (accepts a comma-separated list of ids).

	*/
	Events []int32
	/*Hash
	  [Auth] md5 digest of concatenation of ts, private key, public key

	*/
	Hash string
	/*Limit
	  Limit the result set to the specified number of resources.

	*/
	Limit *int32
	/*ModifiedSince
	  Return only series which have been modified since the specified date.

	*/
	ModifiedSince *strfmt.Date
	/*Offset
	  Skip the specified number of resources in the result set.

	*/
	Offset *int32
	/*OrderBy
	  Order the result set by a field or fields. Add a "-" to the value sort in descending order. Multiple values are given priority in the order in which they are passed.

	*/
	OrderBy []string
	/*SeriesType
	  Filter the series by publication frequency type.

	*/
	SeriesType *string
	/*StartYear
	  Return only series matching the specified start year.

	*/
	StartYear *int32
	/*StoryID
	  The story ID.

	*/
	StoryID int32
	/*Title
	  Filter by series title.

	*/
	Title *string
	/*TitleStartsWith
	  Return series with titles that begin with the specified string (e.g. Sp).

	*/
	TitleStartsWith *string
	/*Ts
	  [Auth] timestamp

	*/
	Ts string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithTimeout(timeout time.Duration) *GetStorySeriesCollectionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithContext(ctx context.Context) *GetStorySeriesCollectionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithHTTPClient(client *http.Client) *GetStorySeriesCollectionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApikey adds the apikey to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithApikey(apikey string) *GetStorySeriesCollectionParams {
	o.SetApikey(apikey)
	return o
}

// SetApikey adds the apikey to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetApikey(apikey string) {
	o.Apikey = apikey
}

// WithCharacters adds the characters to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithCharacters(characters []int32) *GetStorySeriesCollectionParams {
	o.SetCharacters(characters)
	return o
}

// SetCharacters adds the characters to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetCharacters(characters []int32) {
	o.Characters = characters
}

// WithComics adds the comics to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithComics(comics []int32) *GetStorySeriesCollectionParams {
	o.SetComics(comics)
	return o
}

// SetComics adds the comics to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetComics(comics []int32) {
	o.Comics = comics
}

// WithContains adds the contains to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithContains(contains []string) *GetStorySeriesCollectionParams {
	o.SetContains(contains)
	return o
}

// SetContains adds the contains to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetContains(contains []string) {
	o.Contains = contains
}

// WithCreators adds the creators to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithCreators(creators []int32) *GetStorySeriesCollectionParams {
	o.SetCreators(creators)
	return o
}

// SetCreators adds the creators to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetCreators(creators []int32) {
	o.Creators = creators
}

// WithEvents adds the events to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithEvents(events []int32) *GetStorySeriesCollectionParams {
	o.SetEvents(events)
	return o
}

// SetEvents adds the events to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetEvents(events []int32) {
	o.Events = events
}

// WithHash adds the hash to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithHash(hash string) *GetStorySeriesCollectionParams {
	o.SetHash(hash)
	return o
}

// SetHash adds the hash to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetHash(hash string) {
	o.Hash = hash
}

// WithLimit adds the limit to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithLimit(limit *int32) *GetStorySeriesCollectionParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetLimit(limit *int32) {
	o.Limit = limit
}

// WithModifiedSince adds the modifiedSince to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithModifiedSince(modifiedSince *strfmt.Date) *GetStorySeriesCollectionParams {
	o.SetModifiedSince(modifiedSince)
	return o
}

// SetModifiedSince adds the modifiedSince to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetModifiedSince(modifiedSince *strfmt.Date) {
	o.ModifiedSince = modifiedSince
}

// WithOffset adds the offset to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithOffset(offset *int32) *GetStorySeriesCollectionParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetOffset(offset *int32) {
	o.Offset = offset
}

// WithOrderBy adds the orderBy to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithOrderBy(orderBy []string) *GetStorySeriesCollectionParams {
	o.SetOrderBy(orderBy)
	return o
}

// SetOrderBy adds the orderBy to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetOrderBy(orderBy []string) {
	o.OrderBy = orderBy
}

// WithSeriesType adds the seriesType to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithSeriesType(seriesType *string) *GetStorySeriesCollectionParams {
	o.SetSeriesType(seriesType)
	return o
}

// SetSeriesType adds the seriesType to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetSeriesType(seriesType *string) {
	o.SeriesType = seriesType
}

// WithStartYear adds the startYear to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithStartYear(startYear *int32) *GetStorySeriesCollectionParams {
	o.SetStartYear(startYear)
	return o
}

// SetStartYear adds the startYear to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetStartYear(startYear *int32) {
	o.StartYear = startYear
}

// WithStoryID adds the storyID to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithStoryID(storyID int32) *GetStorySeriesCollectionParams {
	o.SetStoryID(storyID)
	return o
}

// SetStoryID adds the storyId to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetStoryID(storyID int32) {
	o.StoryID = storyID
}

// WithTitle adds the title to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithTitle(title *string) *GetStorySeriesCollectionParams {
	o.SetTitle(title)
	return o
}

// SetTitle adds the title to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetTitle(title *string) {
	o.Title = title
}

// WithTitleStartsWith adds the titleStartsWith to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithTitleStartsWith(titleStartsWith *string) *GetStorySeriesCollectionParams {
	o.SetTitleStartsWith(titleStartsWith)
	return o
}

// SetTitleStartsWith adds the titleStartsWith to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetTitleStartsWith(titleStartsWith *string) {
	o.TitleStartsWith = titleStartsWith
}

// WithTs adds the ts to the get story series collection params
func (o *GetStorySeriesCollectionParams) WithTs(ts string) *GetStorySeriesCollectionParams {
	o.SetTs(ts)
	return o
}

// SetTs adds the ts to the get story series collection params
func (o *GetStorySeriesCollectionParams) SetTs(ts string) {
	o.Ts = ts
}

// WriteToRequest writes these params to a swagger request
func (o *GetStorySeriesCollectionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param apikey
	qrApikey := o.Apikey
	qApikey := qrApikey
	if qApikey != "" {
		if err := r.SetQueryParam("apikey", qApikey); err != nil {
			return err
		}
	}

	var valuesCharacters []string
	for _, v := range o.Characters {
		valuesCharacters = append(valuesCharacters, swag.FormatInt32(v))
	}

	joinedCharacters := swag.JoinByFormat(valuesCharacters, "")
	// query array param characters
	if err := r.SetQueryParam("characters", joinedCharacters...); err != nil {
		return err
	}

	var valuesComics []string
	for _, v := range o.Comics {
		valuesComics = append(valuesComics, swag.FormatInt32(v))
	}

	joinedComics := swag.JoinByFormat(valuesComics, "")
	// query array param comics
	if err := r.SetQueryParam("comics", joinedComics...); err != nil {
		return err
	}

	valuesContains := o.Contains

	joinedContains := swag.JoinByFormat(valuesContains, "")
	// query array param contains
	if err := r.SetQueryParam("contains", joinedContains...); err != nil {
		return err
	}

	var valuesCreators []string
	for _, v := range o.Creators {
		valuesCreators = append(valuesCreators, swag.FormatInt32(v))
	}

	joinedCreators := swag.JoinByFormat(valuesCreators, "")
	// query array param creators
	if err := r.SetQueryParam("creators", joinedCreators...); err != nil {
		return err
	}

	var valuesEvents []string
	for _, v := range o.Events {
		valuesEvents = append(valuesEvents, swag.FormatInt32(v))
	}

	joinedEvents := swag.JoinByFormat(valuesEvents, "")
	// query array param events
	if err := r.SetQueryParam("events", joinedEvents...); err != nil {
		return err
	}

	// query param hash
	qrHash := o.Hash
	qHash := qrHash
	if qHash != "" {
		if err := r.SetQueryParam("hash", qHash); err != nil {
			return err
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int32
		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt32(qrLimit)
		if qLimit != "" {
			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}

	}

	if o.ModifiedSince != nil {

		// query param modifiedSince
		var qrModifiedSince strfmt.Date
		if o.ModifiedSince != nil {
			qrModifiedSince = *o.ModifiedSince
		}
		qModifiedSince := qrModifiedSince.String()
		if qModifiedSince != "" {
			if err := r.SetQueryParam("modifiedSince", qModifiedSince); err != nil {
				return err
			}
		}

	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int32
		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt32(qrOffset)
		if qOffset != "" {
			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}

	}

	valuesOrderBy := o.OrderBy

	joinedOrderBy := swag.JoinByFormat(valuesOrderBy, "")
	// query array param orderBy
	if err := r.SetQueryParam("orderBy", joinedOrderBy...); err != nil {
		return err
	}

	if o.SeriesType != nil {

		// query param seriesType
		var qrSeriesType string
		if o.SeriesType != nil {
			qrSeriesType = *o.SeriesType
		}
		qSeriesType := qrSeriesType
		if qSeriesType != "" {
			if err := r.SetQueryParam("seriesType", qSeriesType); err != nil {
				return err
			}
		}

	}

	if o.StartYear != nil {

		// query param startYear
		var qrStartYear int32
		if o.StartYear != nil {
			qrStartYear = *o.StartYear
		}
		qStartYear := swag.FormatInt32(qrStartYear)
		if qStartYear != "" {
			if err := r.SetQueryParam("startYear", qStartYear); err != nil {
				return err
			}
		}

	}

	// path param storyId
	if err := r.SetPathParam("storyId", swag.FormatInt32(o.StoryID)); err != nil {
		return err
	}

	if o.Title != nil {

		// query param title
		var qrTitle string
		if o.Title != nil {
			qrTitle = *o.Title
		}
		qTitle := qrTitle
		if qTitle != "" {
			if err := r.SetQueryParam("title", qTitle); err != nil {
				return err
			}
		}

	}

	if o.TitleStartsWith != nil {

		// query param titleStartsWith
		var qrTitleStartsWith string
		if o.TitleStartsWith != nil {
			qrTitleStartsWith = *o.TitleStartsWith
		}
		qTitleStartsWith := qrTitleStartsWith
		if qTitleStartsWith != "" {
			if err := r.SetQueryParam("titleStartsWith", qTitleStartsWith); err != nil {
				return err
			}
		}

	}

	// query param ts
	qrTs := o.Ts
	qTs := qrTs
	if qTs != "" {
		if err := r.SetQueryParam("ts", qTs); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
